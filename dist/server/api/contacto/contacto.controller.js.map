{"version":3,"sources":["../../../../server/api/contacto/contacto.controller.js"],"names":[],"mappings":"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","file":"contacto.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/contacto              ->  index\n * POST    /api/contacto              ->  create\n * GET     /api/contacto/:id          ->  show\n * PUT     /api/contacto/:id          ->  update\n * DELETE  /api/contacto/:id          ->  destroy\n */\n\n'use strict';\n\nimport _ from 'lodash';\nimport Contacto from './contacto.model';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction saveUpdates(updates) {\n  return function(entity) {\n    var updated = _.merge(entity, updates);\n    return updated.saveAsync()\n      .spread(updated => {\n        return updated;\n      });\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.removeAsync()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Contactos\nexport function index(req, res) {\n  Contacto.findAsync()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Contacto from the DB\nexport function show(req, res) {\n  Contacto.findByIdAsync(req.params.id)\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Contacto in the DB\nexport function create(req, res) {\n  Contacto.createAsync(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\nvar nodemailer = require('nodemailer');\nvar smtpTransport = require('nodemailer-smtp-transport');\n\nvar smtpTransport = nodemailer.createTransport(smtpTransport({\n    host : \"smtp-mail.outlook.com\",\n    secureConnection : false,\n    port: 25,\n    auth : {\n        user : \"estebanmuruzabal@hotmail.com\",\n        pass : \"estebanm\"\n    }\n}));\n \n/**\n * Send an email when the contact from is submitted\n */\nexport function sendMail(req, res) {\n \n    var data = req.body;\n \nvar mailOptions = {\n    from: data.contactEmail,\n    to: 'estebanmuruzabal@hotmail.com', // list of receivers\n    subject: 'Mensaje de seccion contacto [Club Atletico Estudiantes]', // Subject line\n    text:  '\\n Message from ' + data.contactName \n         + '\\n Email: ' + data.contactEmail \n         + '\\n Message:' + data.contactMsg \n         + '\\n Phone:' + data.contactPhone,  \n};\n\n\n\n// send mail with defined transport object\nsmtpTransport.sendMail(mailOptions, function(error, info){\n    if(error){\n        return console.log(error);\n    }\n    console.log('Message sent: ' + info.response);\n});\n};\n\n// Updates an existing Contacto in the DB\nexport function update(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  Contacto.findByIdAsync(req.params.id)\n    .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Contacto from the DB\nexport function destroy(req, res) {\n  Contacto.findByIdAsync(req.params.id)\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}